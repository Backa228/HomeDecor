// @import "base/mixins";
@use "sass:math";

@import url(https://fonts.googleapis.com/css?family=Inter:100,200,300,regular,500,600,700,800,900,100italic,200italic,300italic,italic,500italic,600italic,700italic,800italic,900italic);

$white: #FFFFFF;
$green: #C6C9A5;
$light-gray: #F6F6F6;
$dark-gray: #A2A2A2;
$black: #181818;
$dark-green: #A1A483;
$light-blue: #B7D1D1;
$more-light-blue: #DCEEEE;
$orange: #FF7114;
$light-green: #E1E4C2;
$black: #000;

$main-font-size: 17;
$containerWidth: 1256;
$side-padding-container: 25;

$minWidth: 320;
$maxWidth: 1920;
$maxWidthContainer: 1256;
$containerPadding: 25;

// Брейк-поїнти
$pc: toEm($containerWidth); // ПК, ноутбуки, деякі планшети у горизонтальному положенні
$tablet: toEm(991.98); // Планшети, деякі телефони в горизонтальному положенні
$mobile: toEm(767.98); // Телефони L
$mobileSmall: toEm(479.98); // Телефони S

// Тип адаптива:
// 1 = чуйність (у контейнера немає брейкпоінтів),
// 2 = по брейк-поїнт (контейнер змінює свою ширину по брейк-поїнт)
$responsiveType: 1;

//Percent
@function percent($px, $from: 100) {
    $result: math.div($px, $from) * 100%;
    @return $result;
}

//REM
@function toRem($px, $current: 16) {
    $result: math.div($px, $current) + rem;
    @return $result;
}

//EM
@function toEm($px, $current: 16) {
    $result: math.div($px, $current) + em;
    @return $result;
}

@mixin adaptiveValue($property, $startSize, $minSize, $keepSize: 0, $widthFrom: $containerWidth, $widthTo: $minWidth) {
    @if ($startSize==0) {
        $startSize: 0.000001;
    }

    @if ($minSize==0) {
        $minSize: 0.000001;
    }

    // Для calc();
    $addSize: math.div($startSize - $minSize, 16);

    @if ($widthFrom ==$containerWidth and $maxWidthContainer ==0) {
        $widthFrom: $maxWidth;
    }

    // Брейк-поїнти в EM
    $widthFromMedia: toEm($widthFrom);
    $widthToMedia: toEm($widthTo);

    // Формула плаваючого значення
    // Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/
    $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));
    $yIntersection: -$widthTo * $slope + $minSize;

    @if ($yIntersection==0) {
        $yIntersection: 0.000001;
    }

    $flyValue: #{toRem($yIntersection)}" + "#{$slope * 100}vw;

    // Отримання значення властивості
    $propertyValue: #{"clamp(" toRem($minSize) "," $flyValue "," toRem($startSize) ")"};

    // Якщо негативні значення
    @if ($minSize > $startSize) {
        $propertyValue: #{"clamp(" toRem($startSize) "," $flyValue "," toRem($minSize) ")"};
    }

    // Встановлюємо значення за замовчуванням
    @if $keepSize !=1 and $keepSize !=3 {
        @media (min-width: $widthFromMedia) {
            #{$property}: toRem($startSize);
        }
    }

    // Адаптуємо розмір у проміжку між зазначеними ширинами в'юпорту
    @media (min-width: $widthToMedia) and (max-width: $widthFromMedia) {
        #{$property}: $propertyValue;

        // Якщо підтримується clamp();
        //@supports (#{$property}: $propertyValue) {
        //	#{$property}: $propertyValue;
        //}
        // Якщо не підтримується clamp();
        //@supports not (#{$property}: $propertyValue) {
        //	#{$property}: calc(#{toRem($minSize)} + #{$addSize} * (100vw - #{toRem($widthTo)}) / #{math.div($widthFrom, 16) - math.div($widthTo, 16)});
        //}
    }

    @if $keepSize !=1 and $keepSize !=2 {
        @media (max-width: $widthToMedia) {
            #{$property}: toRem($minSize);
        }
    }
}

* {
    padding: 0;
    margin: 0;
    border: 0;
}

*,
*::before,
*::after {
    box-sizing: border-box;
}

html,
body {
    height: 100%;
    min-width: 20rem;
    line-height: 1;
}

a {
    color: inherit;
    text-decoration: none;
}

ul li {
    list-style: none;
}

img {
    vertical-align: top;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-weight: inherit;
    font-size: inherit;
}

button {
    cursor: pointer;
    color: inherit;
    font-weight: inherit;
    font-size: inherit;
    background-color: transparent;
}

/* Стилі за замовченням */

body {
    font-family: Inter;
    font-size: toRem($main-font-size);
    color: $black;
    background-color: $white;
}

.wrapper {
    min-height: 100%;
    overflow: clip;
    display: flex;
    flex-direction: column;
}

.page {
    flex: 1 1 auto;
}

/* Налаштування адаптиву */
[class*="__container"] {
    max-width: toRem($containerWidth);
    padding-left: toRem($side-padding-container);
    padding-right: toRem($side-padding-container);
    margin: 0 auto;
}

.header {
    background-color: $dark-green;
    height: toRem(79);
    position: relative;
    z-index: 5;

    &__container {
        margin: 0 auto;
        display: flex;
        align-items: center;
        justify-content: space-between;
        height: 100%;
    }

    &__sideMenu {
        display: none;
    }

    .sideMenu__icon {
        width: toRem(29);
        height: toRem(29);
    }

    .sideMenu__icon a img {
        width: 100%;
        transition: content 2s ease;
    }

    &__logo {
        height: toRem(23);
    }

    &__content {
        display: flex;
        justify-content: space-between;
        gap: toRem(50);
    }

    &__nav {
        flex: 1;
        display: flex;
        justify-content: start;
        align-items: center;
    }

    &__menu {
        display: flex;
        // gap: 31px;
        @include adaptiveValue("gap", 31, 0);

        li {
            color: $white;
            font-size: toRem($main-font-size);
            font-weight: 400;
        }

        li:hover {
            text-decoration: underline;
        }
    }

    &__cart {
        padding: toRem(9) toRem(8.51) toRem(9.44) toRem(8);
        border: solid 1px $white;
        border-radius: 50%;
        transition: transform 0.3s ease;

        img {
            width: toRem(17.485);
            height: toRem(15.559);
        }
    }

    &__cart:hover {
        cursor: pointer;
        transform: scale(1.1);
    }
}

@media (max-width: toRem(850)) {
    .header {
        &__nav {
            // display: none;
            position: fixed;
            background-color: $dark-green;
            left: 0;
            top: toReam(79);
            // width: 50vw;
            height: 100vh;
            justify-content: center;
            align-items: start;
            padding: toRem(50);
            transform: translateX(-100%);
            transition: transform 0.5s ease;
        }

        .active_sideMenu {
            transform: translateX(0);
        }

        &__menu {
            flex-direction: column;
        }

        &__sideMenu {
            display: block;
        }

        .sideMenu__icon.open a img {
            content: url("../img/icons/icon-close.svg");
        }

    }
}

@media(max-width: $pc) {}

@media(max-width: $tablet) {
    .header{
        &_logo{
            height: toRem(18);
        }
    }
}

@media(max-width: $mobile) {}

@media(max-width: $mobileSmall) {}